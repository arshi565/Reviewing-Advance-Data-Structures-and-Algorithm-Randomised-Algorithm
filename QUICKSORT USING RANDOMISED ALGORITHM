#include<stdio.h>
#include<stdlib.h>
#include<math.h>
// SWAPPING NUMBERS
void swap(int* x, int* y)
{
 int temp = *x;
 *x = *y;
 *y = temp;
}
int random_partition(int A[], int start, int end)
{
 int diff=(end-start);
 int randNumb=(int)(((double)(diff+1)/RAND_MAX) * rand() + start);
 swap(&A[end], &A[randNumb]);
 int pivot = A[end];
 int pIndex = start;
 int i;
 for (i=start; i<=end-1; i++)
 {
 if (A[i]<= pivot)
 {
 swap(&A[pIndex], &A[i]);
 pIndex=pIndex+1;
 }
 }
 swap(&A[pIndex], &A[end]);
 return pIndex;
}
void quick_sort(int A[], int start, int end)
{ int diff=(end-start);
 if (start < end)
 {
 int p = random_partition(A, start, end);
 quick_sort(A, start, p-1);
 quick_sort(A, p+1, end);
 }
}
void print_array(int A[], int size)
{
 int i;
 for (i=0; i < size; i++)
 printf("%d ", A[i]);
 printf(" ");
}
int main()
{
int A[] = {3,10,22,13,45,213,11,22,29};
 int n = sizeof(A)/sizeof(A[0]);
 printf("Unsorted array: ");
 print_array(A, n);
 printf(" ");
 quick_sort(A, 0, n-1);
 printf("Sorted array: ");
 print_array(A, n);
 return 0;
}
